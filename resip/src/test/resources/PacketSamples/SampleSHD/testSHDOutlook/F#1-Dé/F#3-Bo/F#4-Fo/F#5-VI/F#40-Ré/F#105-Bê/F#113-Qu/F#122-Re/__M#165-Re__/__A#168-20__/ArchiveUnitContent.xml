<Content>
    <DescriptionLevel>Item</DescriptionLevel>
    <Title>20161128 - Questions VITAM 4c_réponse.xlsx</Title>
    <Description>Document &quot;20161128 - Questions VITAM 4c_réponse.xlsx&quot; joint au message &lt;c1c7392fd723dd22bb13197802fc540f@culture.gouv.fr&gt;</Description>
    <CreatedDate>2016-11-30T16:21:18Z</CreatedDate>
    <TextContent>Feuil1
	Questions	Réponses	Précision	Remarque générale :
	Comment retrouver dans VITAM tous les objets soumis à un type de règle de gestion sachant qu&apos;il ne semble pas y avoir de champs rule dans la collection Unit?
(il semblerait que si d&apos;après ce que vous nous avez dit en séance de l&apos;it 11)
Il doit pourtant bien y avoir une trace quelque part du fait qu&apos;un objet est soumis à telle ou telle règle.
Exemple : comment retrouver tous les objets soumis à une appraisalRule?	Les règles ne sont pas associées aux objets mais aux ArchiveUnits. Sous bloc #management de la collection unit.	Réponses complémentaires déjà données dans le fichier :
20161125 - SEDA-XML-JSON-réponse précisions_v1.0.xlsx
Onglet : ManagementMetadataType	Dans le MDD de vitam n’ont été détaillées que les métadonnées au format Json spécifiques à VITAM lorsque les balises sont reprise directement du SEDA le MDD n’a pas été détaillé. Dans le cas ou une balise du SEDA n’est pas mentionnée il faut en déduire qu’elle sont reprise telles que dans le MDD VITAM
	A priori, les champs relatifs aux rules sont stockées dans la collection unit;
Comment? Si un objet est soumis à plusieurs rules, comment sont rangées les différentes dates correspondant à chacune des règles pour ce unit?	sous bloc #management de la collection unit. Un sous-bloc par règle.	Détails complémentaires déjà donnés dans dans le fichier :
20161125 - SEDA-XML-JSON-réponse précisions_v1.0.xlsx
Onglet : ManagementMetadataType
	Dans quelle collection retrouve t-on l&apos;info de la sous balise startdate d&apos;une balise rule dans VITAM? 
Peut-on retrouver un objet à partir de cette info?
Et de tout autre sous balises des balises rule ?	sous bloc _mgt de la collection unit. 
Requête : je cherche toutes les units qui ont pour AccessRule une startdate de …

En DSL : $eq : {#management.AccessRule.Rule, ACC00001}	Détails complémentaires déjà donnés dans dans le fichier :
20161125 - SEDA-XML-JSON-réponse précisions_v1.0.xlsx
Onglet : ManagementMetadataType
	Dans quel champs est stocké le résultat du calcul d&apos;une date (que ce soit échéance, destruction etc…) dans VITAM? (Quelle collection, quel champs)
Est-ce bien la endDate correspondant à chaque rule?	Vitam ajoute une balise EndDate dans le sous-sous bloc correspondant à chaque règle du sous-bloc #management de chaque unit (Attention, ce champ EndDate sera renommé en #EndDate car il est interdit de le modifier directement)
	Auriez vous un exemple de sous collection à interroger justifiant l&apos;utilisation de &quot;roots&quot; avec le DSL?	Le champ « root » indique une recherche arborescente depuis un item d&apos;une collection. Seule la collection Units supporte ce type de requête.
Exemple : recherche des Units sous une Unit dont l&apos;identifiant serait XXX et dont un fils aurait un champ YYY=ZZZ
	Est-il possible d&apos;utiliser le résultat d&apos;une requête avec le DSL comme entrée/critère de recherche pour une autre requête? (Comme les sous requêtes en sql)
Ou doit on nécessairement faire les choses en deux temps?	Le DSL autorise les multi-requêtes mais uniquement pour les collections Units et ObjectGroups. A ce stade, seul Units est supporté.
La logique sous-jacente est que la première utilise « roots » comme racines initiales, la seconde utilise le résultat de la première comme son « roots » et ainsi de suite.
Pour d&apos;autres cas, la logique NoSQL laisse l&apos;application gérer les select from select.
	Est-ce que la balise SEDA ArchiveUnitRefId a une correspondance dans le JSON ? Si oui comment faire une vérification sur la balise ArchiveUnitRefId (SEDA) de la collection Unit comme voulu par le SHD?	non. Je pense qu’il y a un problème de compréhension du SEDA. 
La vérification qu peut être apportée est de la forme suivante : sur la base de l&apos;ATR, on récupère les ID Vitam pour chaque Id XML du manifest et ensuite on vérifie les parents d&apos;un ArchiveUnit pour s&apos;assurer que l&apos;ID Vitam du parent est bien renseigné.
	Est-ce que toutes les informations relatives aux Rules apparaitront dans les metadatas de l&apos;unit ? Sinon lequelles y apparaitront et lesquelles n&apos;apparaitront que dans les logbooks ?	oui, les informations relatives aux Rules apparaissent dans les métadonnées de l’unit. 
La manière d’indiquer quelle règle est utilisée pour quelle opération d’élimination sera étudiée plus tard (pour mémoire, fonctionnalité prévue en V2)	Réponse déjà données dans dans le fichier :
20161125 - SEDA-XML-JSON-réponse précisions_v1.0.xlsx
Onglet : ManagementMetadataType
	Le DSL permet-il de tronquer la valeur d&apos;une recherche ?
Exemple : je veux sortir tous les SIP injecté dans VITAM un jour précis mais pas à une heure (seconde, minutes….) précise	Non, mais il est possible de limiter les champs retournés (projection)
Exemple : il est également possible d’utiliser des opérateurs &lt;  et &gt; sur les champs date
	Nous souhaitons faire une recherche dans VITAM  sur la balise &lt; identifier&gt; compris dans le bloc &lt; ArchivalAgency&gt; afin d&apos;obtenir tous les units d&apos;un service d&apos;archive particulier. Comment dans Vitam peut on faire une recherche de ce type ? (Lié a la question suivante)	Si c&apos;est un champ du Content : la forme est ArchivalAgency.Identifier
S&apos;agissant du ArchivalAgency du Header du manifest, cette balise n&apos;est pas actuellement prise en compte et correspondrait au service d&apos;archive du SAE (a priori unique par tenant). 

Pour quelles types de recherches voulez-vous utiliser ce champ ?
	Dans une de vos précédentes réponses vous nous aviez signalé que toutes les métadonnées contenues dans les messages ArchiveTransfert et ArchiveTransfertReply sont présentes sous une forme dédiée dans les jounaux sans nous donner la liste de ces balises, balises qui ne semblent pas être présentées dans le modèle de données.
Comment retrouver ces balises dans les journaux?D&apos;après le fichier SEDA-JSON-XML, ce n&apos;est pas possible?	Précisé dans la réponse dans le fichier :
20161125 - SEDA-XML-JSON-réponse précisions_v1.0.xlsx
Onglet : BusinessMessageType
Comme indiqué dans ce document, certains champs ne sont pas stockés dans la version bêta.
	Peut on, via les API, modifier les règles de gestion (aussi bien la rule, que la StartDate ou encore le sort final) ? Cette modification se fait dans la collection Unit ? Si non, dans quelle collection cela peut il être possible ? (lié a la question suivante)	La modification des règles de gestion n’est pas disponible en Bêta.
La modification des règles de gestion au sens métier implique a priori des contrôles spécifiques différents de ceux de la mise à jour des MD du content et n’est pas encore implémentée. C’est une US qui reste à réaliser. 
	Si la modification de règle de gestion est possible, peut on aussi le faire sur un ensemble d&apos;unit (exemple : tous les Units qui étaient ensemble dans le même SIP) ?	La modification des règles de gestion n’est pas disponible en Bêta.
Concernant la modification du « content » (métadonnées descriptives) d’une Unit : 
Le mode « en masse » (sous la forme d’une requête unique) n’est pas disponible en Bêta.
Il est par contre possible, pour de petites volumétries (quelques dizaines), d’enchaîner des requêtes de modification unitaire sur chaque unit à modifier.
	Pouvez vous nous donner toutes les valeurs reconnues par VITAM pour les différentes FinalAction des règles de gestion (Keep,…,) ?	celles du SEDA (voir documentation SEDA). L’équipe Vitam a notamment relayé auprès du COPIL SEDA la demande du SHD de disposer, pour le sort final des AppraisalRule, d’un sort correspondant à « échantillonner » en plus des sort correspondant à « conserver «  et « détruire »
	Nous savons qu&apos;il est possible de purger le référentiel des règles de gestion et PRONOM via l&apos;IHM de recette, mais cela est-il possible via l&apos;API ?	Non, car c&apos;est un événement a priori contraire à la production car dangereux. Il supposerait d&apos;éliminer immédiatement toutes les archives et objets numériques qui utiliseraient ce référentiel, donc toutes.
	En API, je souhaite obtenir la liste des entrées dans le journal des opérations qui contiennent la balise Rule de AccessRule valorisée a ACC-003, cela est il possible ? Si oui, comment construire la requete ?	Oui. C’est possible via les API (pas l’IHM) en utilisant deux requêtes distinctes :
1 – recherche des units pour lesquels AccessRule vaut ACC-003, récupération pour chaque unit trouvées de l‘identifiant des opérations “_ops” (#operations dans la réponse)
2 – Parmi ces opérations, rechercher l’opération  d’INGEST (tel que « evTypeProc »=INGEST), c’est celle qui aura positionner la valeur de la règle AccessRule à l’ « Entrée » du SIP dans VITAM. 

	Dans ArchiveTransferReply, &lt; ReplyCode&gt; est sous
ArchiveTransferReply/DataObjectPackage/ReplyCode, dans le cas KO
ArchiveTransferReply/ReplyCode, dans le cas OK
Est-ce normal ?	oui, car la réflexion sur les ArchiveTransferReply a mûri entre la conception du cas OK (1 conçu) et la conception du cas KO (conçu après). Le cas OK va être repris en réinjectant certaines idées intégrées dans les cas KO. Mais la question reflète bien l’état des ArchiveTransferReply disponibles dans la version bêta
	Peut on avec les APIs faire une recherche sur une valeur partiel d&apos;un champs : 
&quot;%LEUR&quot; au lieu de &quot;VALEUR&quot; par exemple	Oui, en utilisant le DSL et la commande $match
	Différence entre eq et match dans DSL?	$eq est une égalité stricte, $match est une recherche plein texte


Feuil2


Feuil3


</TextContent>
</Content>