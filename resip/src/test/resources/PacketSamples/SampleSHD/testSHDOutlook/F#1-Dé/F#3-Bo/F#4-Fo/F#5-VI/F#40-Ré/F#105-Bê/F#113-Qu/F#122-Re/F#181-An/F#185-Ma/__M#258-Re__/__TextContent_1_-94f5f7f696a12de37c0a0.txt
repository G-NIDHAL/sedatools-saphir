Bonjour Thierry,

Suite à votre question, nous ne pouvons pas en même temps interroger tous les fils et les roots associés.

En synthèse :

- $depth < 0 => seuls les noeuds parents de roots sont pris en compte (pas roots)

- $depth = 0 => seul les noeuds de roots sont pris en compte (ni père, ni fils)

- $depth > 0 => Seul les noeuds fils sont pris en compte (pas roots)

On ne peut donc pas à la fois chercher sur les "roots" et les "fils de roots": il faut faire 2 requêtes (distinctes).

Par contre, on peut en 1 requête chercher un sous-ensemble des "roots", puis sur cette base les fils de ce sous-ensemble (multi-query dans une requête)

 

Cordialement,

Nathanael

 

 

Le 2017-01-06 16:12, CASIMIRIUS Thierry a écrit :

	Bonjour,

	 

	Nous avons bien pris en compte vos précisions sur l’utilisation de $depth.

	Par contre, à la lecture de votre réponse, nous avons une question supplémentaire :

	Est-il bien possible d’interroger tous les fils (en partant d’un ou n roots) et le /  les roots associés ? 

	Et alors, comment ?

	 

	En vous remerciant d’avance, pour votre retour, 

	 

	Cordialement,

	 

	Thierry CASIMIRIUS

	Chef du bureau des technologies de l’information

	Service historique de la Défense

	SGA/DMPA/SHD/PPST/BTI

	Tél : 01 41 93 20 45

	 

	De : CASIMIRIUS Thierry IDEF MINDEF 
	Envoyé : vendredi 6 janvier 2017 15:53
	À : 'AJJAZ Franck'
	Objet : RE: [Projet VITAM 0000022]: Impossibilité d'effectuer une query si plusieurs éléments dans roots : réponse VITAM

	 

	Franck,

	 

	Voici les compléments apportés en commentaire sur cette anomalie tuleap / mantis 

	 

	Merci de m’indiquer qu’elle peut donc être fermée.

	 

	 

	Nathanael Attar (nattar) <https://support.programmevitam.fr/users/nattar> il y a 23 heures

	En complément, suite aux précédents commentaires :
	Si $depth = 0, alors on inclut les "roots" dans la recherche
	Si $depth > 0, alors pas de roots dans les fils
	Si $depth < 0, alors pas de roots dans les parents.

	 

	 

	Cordialement,

	 

	Thierry CASIMIRIUS

	Chef du bureau des technologies de l’information

	Service historique de la Défense

	SGA/DMPA/SHD/PPST/BTI

	Tél : 01 41 93 20 45

	 

	De : AJJAZ Franck [mailto:franck.ajjaz@altran.com] 
	Envoyé : vendredi 6 janvier 2017 15:45
	À : CASIMIRIUS Thierry IDEF MINDEF
	Objet : RE: [Projet VITAM 0000022]: Impossibilité d'effectuer une query si plusieurs éléments dans roots : réponse VITAM

	 

	Thierry,

	 

	En effet, en mettant depth = 0, la requête fonctionne.

	 

	Il faudrait maintenant comprendre pourquoi il est nécessaire de mettre cette valeur.

	 

	Ne comprenant pas l’explication donné dans TULEAP par Frédéric, je pense laisser l’anomalie ouverte jusqu’à ce que nous ayons le retour de VITAM (ils nous ont dit hier qu’ils reviendraient vers nous pour éclaircir l’explication).

	 

	Cordialement,

	Franck AJJAZ

	Chef de Projet

	TRA VITAM
	franck.ajjaz@altran.com

	 

	 

	 

	De : CASIMIRIUS Thierry [mailto:thierry.casimirius@intradef.gouv.fr] 
	Envoyé : mercredi 4 janvier 2017 18:15
	À : AJJAZ Franck
	Objet : TR: [Projet VITAM 0000022]: Impossibilité d'effectuer une query si plusieurs éléments dans roots : réponse VITAM

	 

	 

	Franck,

	 

	La réponse de VITAM pour l’anomalie 22 Mantis / 32 tuleap.

	 

	https://support.programmevitam.fr/themes/common/images/avatar_default.png

	Nathanael Attar (nattar) <https://urldefense.proofpoint.com/v2/url?u=https-3A__support.programmevitam.fr_users_nattar&d=DgMGaQ&c=cxWN2QSDopt5SklNfbjIjg&r=QoR2lifbZEFIS4BgOn-DRYzMLEvEx_HUym5g_q0Xqr0&m=219BZsQY19UgdAcjLlOOUAQ7shGd0t6ZBfTmz3Zau0c&s=i29klW3I9fZya7LN3CnPzSJteV2_BcCdDTq5l-ITlGg&e=> il y a 14 jours

	Selon l'équipe de Dev, "Je confirme que la requête marche bien avec le $depth = 0 (Capture écran attaché). Il y a autre erreur dans la requête, le titre de AU dans le SIP fourni est "PVI58fic_pr_empreinte_Appraisalerule.txt", et on ne peut pas chercher avec "PVI58fic_pour_empreinte_Appraisalerule""
	
	N'est en conséquence plus considéré comme un bug ("Non Corrigé")

	 

	 

	L’anomalie est-elle à fermer ???

	 

	Cordialement,

	 

	Thierry CASIMIRIUS

	Chef du bureau des technologies de l’information

	Service historique de la Défense

	SGA/DMPA/SHD/PPST/BTI

	Tél : 01 41 93 20 45

	 

	-----Message d'origine-----
	De : Mantis Bug Tracker [mailto:admtlvitam@gmail.com] 
	Envoyé : lundi 19 décembre 2016 14:10
	À : CASIMIRIUS Thierry IDEF MINDEF
	Objet : [Projet VITAM 0000022]: Impossibilité d'effectuer une query si plusieurs éléments dans roots

	 

	 

	Le bogue suivant a été soumis. 

	======================================================================

	http://213.32.79.242/mantisbt/view.php?id=22 <https://urldefense.proofpoint.com/v2/url?u=http-3A__213.32.79.242_mantisbt_view.php-3Fid-3D22&d=DgMGaQ&c=cxWN2QSDopt5SklNfbjIjg&r=QoR2lifbZEFIS4BgOn-DRYzMLEvEx_HUym5g_q0Xqr0&m=219BZsQY19UgdAcjLlOOUAQ7shGd0t6ZBfTmz3Zau0c&s=SMXuLnGrxJhCFwepkxtORBhMMwPyoVOdSfOk6pb9erw&e=> 

	====================================================================== 

	Rapporteur:                 Franck

	Responsable:                

	====================================================================== 

	Projet:                     Projet VITAM

	Bogue ID:                   22

	Catégorie:                  BugFromTestlink

	Reproductibilité:           toujours

	Impact:                     majeur

	Priorité:                   normale

	Statut:                     nouveau

	Comportement attendu:        

	US concernée:                

	====================================================================== 

	Date de soumission:         2016-12-19 14:09 CET

	Dernière modification:      2016-12-19 14:09 CET

	====================================================================== 

	Résumé:                     Impossibilité d'effectuer une query si plusieurs

	éléments dans roots

	Description: 

	Lorsque l'on veut effectuer une requête dans un sous-ensemble défini dans le roots, celle ci ne fonctionne pas.

	 

	Nous effectuons notre test dans la collection Unit Notre requête "$eq" seule fonctionne :

	 

	{

	  "$roots": [],

	  "$query": [

	 

	      {

	          "$eq": {

	            "Title": "PVI58fic_pour_empreinte_Appraisalerule"

	          }

	        

	      ,

	      "$depth": 20

	    }

	  ],

	  "$filter": {

	    "$orderby": {

	      "TransactedDate": 1

	    }

	  },

	  "$projection": {

	    "$fields": {

	      "TransactedDate": 1,

	      "#id": 1,

	      "Title": 1,

	      "#object": 1

	    }

	  }

	}

	 

	Cette requête nous donne bien la unit recherchée:

	 

	{

	   "$hits":    {

	      "total": 1,

	      "offset": 0,

	      "limit": 1,

	      "size": 1

	   },

	   "$results": [   {

	      "Title": "PVI58fic_pour_empreinte_Appraisalerule",

	      "TransactedDate": "2016-12-08T17:53:38",

	      "#id": "aeaaaaaaaaaam7mxaaa3gaky35ur6miaaaaq",

	      "#tenant": 0,

	      "#object": "aeaaaaaaaaaam7mxaaa3gaky35ur56yaaaba"

	   }],

	   "$context":    {

	      "$roots": [],

	      "$query": [{"$eq": {"Title": "PVI58fic_pour_empreinte_Appraisalerule"}}],

	      "$filter": {"$orderby": {"TransactedDate": 1}},

	      "$projection": {"$fields":       {

	         "TransactedDate": 1,

	         "_id": 1,

	         "Title": 1,

	         "_og": 1

	      }}

	   }

	}

	 

	Nous pouvons aussi mettre deux id dans le roots :

	 

	{

	  "$roots":

	["aeaaaaaaaaaam7mxaaa3gaky35ur6miaaaaq","aeaaaaaaaaaam7mxaadx2aky66alm6qaaaaq"],

	  "$query": [],

	  "$filter": {

	    "$orderby": {

	      "TransactedDate": 1

	    }

	  },

	  "$projection": {

	    "$fields": {

	      "TransactedDate": 1,

	      "#id": 1,

	      "Title": 1,

	      "#object": 1

	    }

	  }

	}

	cela nous donne bien les deux unit dont les id sont dans le roots:

	 

	{

	   "$hits":    {

	      "total": 2,

	      "offset": 0,

	      "limit": 1,

	      "size": 2

	   },

	   "$results":    [

	            {

	         "Title": "Armée de France.pdf",

	         "TransactedDate": "2016-10-07T14:13:00",

	         "#id": "aeaaaaaaaaaam7mxaadx2aky66alm6qaaaaq",

	         "#tenant": 0,

	         "#object": "aeaaaaaaaaaam7mxaadx2aky66almyaaaaaq"

	      },

	            {

	         "Title": "PVI58fic_pour_empreinte_Appraisalerule",

	         "TransactedDate": "2016-12-08T17:53:38",

	         "#id": "aeaaaaaaaaaam7mxaaa3gaky35ur6miaaaaq",

	         "#tenant": 0,

	         "#object": "aeaaaaaaaaaam7mxaaa3gaky35ur56yaaaba"

	      }

	   ],

	   "$context":    {

	      "$roots":       [

	         "aeaaaaaaaaaam7mxaaa3gaky35ur6miaaaaq",

	         "aeaaaaaaaaaam7mxaadx2aky66alm6qaaaaq"

	      ],

	      "$query": [],

	      "$filter": {"$orderby": {"TransactedDate": 1}},

	      "$projection": {"$fields":       {

	         "TransactedDate": 1,

	         "_id": 1,

	         "Title": 1,

	         "_og": 1

	      }}

	   }

	}

	 

	En revanche, nous ne pouvons pas filtrer sur le titre si nous avons réduit l'ensemble dans le roots :

	 

	{

	  "$roots":

	["aeaaaaaaaaaam7mxaaa3gaky35ur6miaaaaq","aeaaaaaaaaaam7mxaadx2aky66alm6qaaaaq"],

	  "$query": [

	 

	      {

	          "$eq": {

	            "Title": "PVI58fic_pour_empreinte_Appraisalerule"

	          }

	        

	      ,

	      "$depth": 20

	    }

	  ],

	  "$filter": {

	    "$orderby": {

	      "TransactedDate": 1

	    }

	  },

	  "$projection": {

	    "$fields": {

	      "TransactedDate": 1,

	      "#id": 1,

	      "Title": 1,

	      "#object": 1

	    }

	  }

	}

	 

	Cette requête nous renvoie 0 résultat :

	 

	{

	   "$hits":    {

	      "total": 0,

	      "offset": 0,

	      "limit": 1,

	      "size": 0

	   },

	   "$results": [],

	   "$context":    {

	      "$roots":       [

	         "aeaaaaaaaaaam7mxaaa3gaky35ur6miaaaaq",

	         "aeaaaaaaaaaam7mxaadx2aky66alm6qaaaaq"

	      ],

	      "$query": [{"$eq": {"Title": "PVI58fic_pour_empreinte_Appraisalerule"}}],

	      "$filter": {"$orderby": {"TransactedDate": 1}},

	      "$projection": {"$fields":       {

	         "TransactedDate": 1,

	         "_id": 1,

	         "Title": 1,

	         "_og": 1

	      }}

	   }

	}

	 

	Étapes pour le reproduire: 

	Nous joignons un SIP mais les id internes VITAM ne seront pas les mêmes.

	Il suffit de récupérer deux id VITAM dans la BDD pour reproduire le test.

	 

	 

	 

	Informations complémentaires: 

	PVI-455

	dans le cas de test, la démarche est la même mais sur deux collections;

	 

	====================================================================== 

	 

	Historique du bogue 

	Date de modificationNom d’utilisateurChamp                    Changement      

	    

	====================================================================== 

	2016-12-19 14:09 Franck         Nouveau bogue                                

	2016-12-19 14:09 Franck         Fichier ajouté: SIP-20161208175358.zip         

	          

	======================================================================