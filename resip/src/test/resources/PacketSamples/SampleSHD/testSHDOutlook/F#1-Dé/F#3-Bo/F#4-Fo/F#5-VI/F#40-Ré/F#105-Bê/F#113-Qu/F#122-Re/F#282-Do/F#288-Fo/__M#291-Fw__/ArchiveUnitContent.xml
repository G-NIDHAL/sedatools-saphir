<Content>
    <DescriptionLevel>Item</DescriptionLevel>
    <Title>Fwd: [bugs #51] 0000055: Rejet des SIP ne contenant pas de groupe d&apos;objet technique</Title>
    <OriginatingSystemId>&lt;82a430c47c0101a255c96f379050e8ba@culture.gouv.fr&gt;</OriginatingSystemId>
    <Writer>
        <FirstName>edouard VASSEUR</FirstName>
        <BirthName>edouard VASSEUR</BirthName>
        <Identifier>edouard.vasseur@culture.gouv.fr</Identifier>
    </Writer>
    <Addressee>
        <FirstName>CASIMIRIUS Thierry</FirstName>
        <BirthName>CASIMIRIUS Thierry</BirthName>
        <Identifier>thierry.casimirius@intradef.gouv.fr</Identifier>
    </Addressee>
    <Recipient>
        <FirstName>nathanaël ATTAR</FirstName>
        <BirthName>nathanaël ATTAR</BirthName>
        <Identifier>nathanael.attar.ext@culture.gouv.fr</Identifier>
    </Recipient>
    <SentDate>2017-01-23T17:26:20Z</SentDate>
    <ReceivedDate>2017-01-23T17:26:32Z</ReceivedDate>
    <TextContent>Bonsoir Thierry,

Tu trouveras ci-joint une nouvelle version du document Design SIP avec des propositions de modifications sur le sujet que tu soulèves.

Est-ce que ces propositions de modifications (p. 15 et 16) te semblent suffisantes ?

Excellente soirée à toi et à bientôt

Edouard

 

-------- Message original --------

Objet:	 [bugs #51] 0000055: Rejet des SIP ne contenant pas de groupe d&apos;objet technique	 
Date:	 2017-01-19 17:07	 
De:	 Tuleap &lt; &quot;forge__artifacts@no-reply&quot;@programmevitam.fr&gt;	 
À:	 Edouard Vasseur &lt; edouard.vasseur@culture.gouv.fr&gt;	 

 

Tuleap
Support VITAM » Bugs » Bugs #51
Se désinscrire &lt; https://support.programmevitam.fr/plugins/tracker/?aid=51&amp;func=manage-subscription&gt; 

0000055: Rejet des SIP ne contenant pas de groupe d&apos;objet technique


Dernières modifications


Nathanael Attar (nattar) &lt; mailto:nathanael.attar.ext@culture.gouv.fr&gt; 	19/01/2017 16:07 (GMT)
Bonjour Thierry,

Cela fait sens effectivement, j&apos;ai transmis votre demande auprès de l&apos;Administration et reviens prochainement vers vous à cet effet.

Cordialement,

Nathanael
 	 Répondre &lt; https://support.programmevitam.fr/plugins/tracker/?aid=51&gt;  	

État

Identifiant 	 #51 &lt; http://support.programmevitam.fr/plugins/tracker/?aid=51&gt; 	 
Déposé par 	 Thierry Casimirius (tcasimirius)	 
Ministère 	 MINDEF	 
Date de dernière modification 	 19/01/2017 16:07	 
Date de dépôt 	 09/01/2017 18:25	 
 	 

Détails

Résumé 	 0000055: Rejet des SIP ne contenant pas de groupe d&apos;objet technique	 
Comportement observé 	 Tous les SIP ne contenant pas les balises ci-après sont rejetés lors de la phase d&apos;importation : DataObjectGroupId, DataObjectVersion, DataObjectReference&quot; et DataObjectGroupReferenceId.
D&apos;après le SEDA (SEDA_description_standard_v2_0), les balises indiqués ci-dessus sont optionnelles.

Trois scenarii peuvent être déroulés pour reproduire l&apos;anomalie
----------------------------------------------------------------

1- cas : importez un SIP ne contenant pas les balises &quot;DataObjectGroupId&quot; et &quot;DataObjectVersion&quot; dans le bloc &quot;BinaryDataObject&quot;.

2-cas : importez un SIP ne contenant pas les balises suivantes :
- &quot;DataObjectReference&quot; et &quot;DataObjectGroupReferenceId&quot; dans le bloc &quot;ArchiveUnit&quot;.
- &quot;DataObjectGroupId&quot; et &quot;DataObjectVersion&quot; dans le bloc &quot;BinaryDataObject&quot;.

3-cas : importez un SIP ne contenant pas les balises &quot;DataObjectReference&quot; et &quot;DataObjectGroupReferenceId&quot; dans le bloc &quot;ArchiveUnit&quot;

La US 789 indique que VITAM doit créer ou associer un GOT aux objets orphelins.
Comment créer un objet orphelin si toutes ces balises sont obligatoires ?
Comportement attendu 	 Les SIP doivent être importés, car toutes ces balises sont optionnelles.
Criticité 	 Majeur	 
Taux de reproduction 	 Systématique	 
US concernée 	 -	 
 	 

Pièces jointes

Pièces jointes 	 Altran.7z &lt; http://support.programmevitam.fr/plugins/tracker/?aid=51&amp;field=380&amp;func=show-attachment&amp;attachment=162&gt;  (96 kB)	 
OK_SIP_MANIFESTE-OBJET-SANS-GOT.zip &lt; http://support.programmevitam.fr/plugins/tracker/?aid=51&amp;field=380&amp;func=show-attachment&amp;attachment=179&gt;  (200 kB)	 
KO_OBJT_orphelins.zip &lt; http://support.programmevitam.fr/plugins/tracker/?aid=51&amp;field=380&amp;func=show-attachment&amp;attachment=180&gt;  (373 kB)	 
 	 

Suivi du bug

Statut 	 En attente d’information	 
Résolution 	 -	 
Assigné à 	 -	 
Type de bug 	 Développement	 
Version de correction 	 -	 
 	 

References

Cross references 	 -	 

Commentaires


Nathanael Attar (nattar) &lt; mailto:nathanael.attar.ext@culture.gouv.fr&gt; 	11/01/2017 16:46 (GMT)
Bonjour,

Concernant ce bug, pourriez vous préciser davantage le cas 1 en particulier ?

S&apos;il y a un DataObjectReferenceId dans une unit qui pointe vers un objet, et que le SIP est rejeté, c&apos;est un bug
S&apos;il n&apos;y a pas ce DataObjectReferenceId, et que le SIP est rejeté, ce n&apos;est pas un bug.

En effet, c&apos;est permis dans Vitam UNIQUEMENT SI une unit possède un DataObjectReferenceId qui pointe vers cet objet, c&apos;est la story 789.
Si ce n&apos;est pas le cas, le SIP doit être refusé.

Cas 2 :
Vitam doit rejeter le SIP car il s&apos;agit ici d&apos;un objet qui n&apos;est pas rattaché à une unit.
C&apos;est valide dans le SEDA mais c&apos;est une restriction volontaire dans VITAM : story 808

Cas 3 : cela est normal car il s&apos;agit d&apos;un objet orphelin, c&apos;est à dire un objet qui n&apos;est référencé par aucune archive unit ou groupe d&apos;objet.
En effet, la US 789 indique que VITAM doit créer ou associer un GOT aux objets orphelins. Or, comment créer un objet orphelin si toutes ces balises sont obligatoires ? L&apos;US 789 traite le cas où l&apos;objet est directement attaché à l&apos;unit sans passer par un groupe d&apos;objet. Ici le cas est similaire au point 2, story 808 donc.

Cdt
Nathanael

Edouard Vasseur (evasseur) &lt; mailto:edouard.vasseur@culture.gouv.fr&gt; 	12/01/2017 09:20 (GMT)

Il n&apos;est pas nécessaire de créer un groupe d&apos;objet pour qu&apos;un objet puisse être injecté dans Vitam.

Dans ce cas, l&apos;ArchiveUnit doit utiliser la balise DataObjectReferenceId et non la balise DataObjectGroupReferenceId

&lt; DataObjectPackage xml:id=&quot;ID2&quot;&gt;
        &lt; BinaryDataObject id=&quot;ID5&quot;&gt;
            &lt; Uri&gt;Content/ID5.pdf&lt; /Uri&gt;
            &lt; MessageDigest algorithm=&quot;SHA-256&quot;&gt;9ba596a562ef0cd121c21d561f53678e39edbe271435052230b83737928359f9&lt; /MessageDigest&gt;
            &lt; Size&gt;102887&lt; /Size&gt;
            &lt; FormatIdentification&gt;
                &lt; FormatLitteral&gt;Acrobat PDF 1.4 - Portable Document Format&lt; /FormatLitteral&gt;
                &lt; MimeType&gt;application/pdf&lt; /MimeType&gt;
                &lt; FormatId&gt;fmt/18&lt; /FormatId&gt;
            &lt; /FormatIdentification&gt;
            &lt; FileInfo&gt;
                &lt; Filename&gt;SHDMC_REP_1A_V2009.pdf&lt; /Filename&gt;
                &lt; LastModified&gt;2015-11-10T12:12:30.000+01:00&lt; /LastModified&gt;
            &lt; /FileInfo&gt;
        &lt; /BinaryDataObject&gt;
        &lt; BinaryDataObject id=&quot;ID9&quot;&gt;
            &lt; Uri&gt;Content/ID9.xlsx&lt; /Uri&gt;
            &lt; MessageDigest algorithm=&quot;SHA-256&quot;&gt;c4cb3d26864c1c89e1b76d613ddc6f2741d91a30fbccffb5ba57d6769ac6c95f&lt; /MessageDigest&gt;
            &lt; Size&gt;8414&lt; /Size&gt;
            &lt; FormatIdentification&gt;
                &lt; FormatLitteral&gt;Microsoft Excel for Windows&lt; /FormatLitteral&gt;
                &lt; MimeType&gt;application/vnd.openxmlformats-officedocument.spreadsheetml.sheet&lt; /MimeType&gt;
                &lt; FormatId&gt;fmt/214&lt; /FormatId&gt;
            &lt; /FormatIdentification&gt;
            &lt; FileInfo&gt;
                &lt; Filename&gt;SHDMC_REP_1A_V2009.xlsx&lt; /Filename&gt;
                &lt; LastModified&gt;2016-12-13T16:04:50.492+01:00&lt; /LastModified&gt;
            &lt; /FileInfo&gt;
        &lt; /BinaryDataObject&gt;
        &lt; DescriptiveMetadata&gt;
            &lt; ArchiveUnit id=&quot;ID6&quot;&gt;
                &lt; Content&gt;
                    &lt; DescriptionLevel&gt;Item&lt; /DescriptionLevel&gt;
                    &lt; Title&gt;TitrearchiveunitDMD&lt; /Title&gt;
                    &lt; Description&gt;Pseudo Archive Unit du fichier :C:\Users\fajjaz\Documents\VITAM\zzzPremiers Tests\IHM\Essaies_GOT\2eme essaie\JDD\MC_A_COMMANDEMENT-MARINE-PORTS-MILITAIRES\SHDMC_REP_1A_V2009.pdf&lt; /Description&gt;
                    &lt; TransactedDate&gt;2015-11-10T12:12:30&lt; /TransactedDate&gt;
                &lt; /Content&gt;
                &lt; DataObjectReference&gt;
                    &lt; DataObjectReferenceId&gt;ID4&lt; /DataObjectReferenceId&gt;
                &lt; /DataObjectReference&gt;
            &lt; /ArchiveUnit&gt;
        &lt; /DescriptiveMetadata&gt;
        &lt; ManagementMetadata&gt;
            &lt; OriginatingAgencyIdentifier&gt;OAIAJJAZ&lt; /OriginatingAgencyIdentifier&gt;
            &lt; SubmissionAgencyIdentifier&gt;SAIAJJAZ&lt; /SubmissionAgencyIdentifier&gt;
        &lt; /ManagementMetadata&gt;
    &lt; /DataObjectPackage&gt;

 


Thierry Casimirius (tcasimirius) &lt; mailto:thierry.casimirius@intradef.gouv.fr&gt; 	12/01/2017 11:20 (GMT)
Bonjour,

Voici notre retour sur les commentaires de Nathanael :

Pour le cas 1 :
Il y a bien un DataObjectReferenceId qui pointe vers un objet mais étant donné qu’il n’y a pas la balise DataObjectGroupId car supprimée, la RéferenceId ne renvoie vers rien d’existant.

Pour les cas 2 et 3 :
Le SEDA précise que les balises DataObjectRefrence et DataObjectGroupReferenceID sont bien facultatives, il devrait donc être possible de créer des objets orphelin.

Nathanael Attar (nattar) &lt; mailto:nathanael.attar.ext@culture.gouv.fr&gt; 	12/01/2017 13:37 (GMT)
Pour le 1er cas :
On peut observer que dans le manifeste, ce n&apos;est pas un DataObjectReferenceId mais un DataObjectGROUPReferenceId. (or pour rappel, l&apos;ArchiveUnit doit utiliser la balise DataObjectReferenceId et non la balise DataObjectGroupReferenceId)

Pour le second cas : 
&quot;Le SEDA précise que les balises DataObjectRefrence et DataObjectGroupReferenceID sont bien facultatives, il devrait donc être possible de créer des objets orphelin.&quot;
Jusqu&apos;ici dans Vitam nous sommes parfois plus restrictif que le SEDA, ce qui est le cas pour ce point.
- OUI, le SEDA autorise de ne pas mettre les balises DataObjectRefrence et DataObjectGroupReferenceID
- NON, Vitam n&apos;autorise pas les objets &quot;orphelins&quot;, c&apos;est à dire les objets qui ne sont rattachés à aucune archive unit (et donc qu&apos;on ne sait pas où ranger en fait)

La règle est :
- Soit l&apos;objet est dans un groupe d&apos;objet, et ce groupe d&apos;objet est déclaré dans une unit ( DataObjectGroupReferenceID)
- Soit l&apos;objet est directement déclaré dans une unit (DataObjectReferenceID)

Point d&apos;attention : DataObjectRefrence est une balise &quot;chapeau&quot; et DataObjectRefrenceId est une balise qui contient une valeur.


Aussi, nous vous soumettons le rejet de ce bug, si vous y consentez.

Emmanuel Laborde (elaborde) &lt; mailto:emmanuel.laborde@culture.gouv.fr&gt; 	13/01/2017 15:31 (GMT)
Attention à ne pas mélanger deux cas différents :

1 - cas des objets orphelins : ils ne sont référencés d&apos;aucunes manières par un unit dans le manifest, C&apos;est un contrôle d&apos;erreur qui implique un retour KO. Nous ajoutons en PJ un SIP pour ce cas

2 - cas de création par VITAM d&apos;un objet groupe &quot;implicite&quot; dans le manifest. C&apos;est le cas que vous souhaitez tester. (l&apos;objet est également implicitement qualifié de BinaryMaster). Nous ajoutons en PJ un SIP pour ce cas.

Explication :
Pour déclarer un tel cas dans le manifest il faut que le Unit référence &quot;directement&quot; l&apos;objet par son id de la manière suivante :

&lt; ArchiveUnit id=&quot;ID31&quot;&gt;
&lt; Content&gt;
...
&lt; /Content&gt;
&lt; DataObjectReference&gt;
ATTENTION : ici la balise DataObjectReference ne contient pas l&apos;attribut id
&lt; DataObjectReferenceId&gt;ID33&lt; /DataObjectReferenceId&gt;
ATTENTION ici la balise DataObjectReferenceId a remplacé la traditionnelle balise DataObjectGroupReferenceId et c&apos;est directement l&apos;id de l&apos;objet qui est indiqué (cf. &lt; BinaryDataObject id=&quot;ID33&quot;&gt;
&lt; /DataObjectReference&gt;
&lt; /ArchiveUnit&gt;

&lt; BinaryDataObject id=&quot;ID33&quot;&gt;
ATTENTION : ici il ne faut pas qu&apos;il y ai les balises &lt; DataObjectGroupId&gt; et &lt; DataObjectVersion&gt;
...
&lt; Uri&gt;Content/ID33.ods&lt; /Uri&gt;
&lt; /BinaryDataObject&gt;

Thierry Casimirius (tcasimirius) &lt; mailto:thierry.casimirius@intradef.gouv.fr&gt; 	19/01/2017 15:58 (GMT)
Merci pour ces précisions.

Serait-il possible que ces explications soient reprises dans le document de spécification SIP vitam ?
Je pense que ce serait utile à d&apos;autres personnes.

Nathanael Attar (nattar) &lt; mailto:nathanael.attar.ext@culture.gouv.fr&gt; 	19/01/2017 16:07 (GMT)
Bonjour Thierry,

Cela fait sens effectivement, j&apos;ai transmis votre demande auprès de l&apos;Administration et reviens prochainement vers vous à cet effet.

Cordialement,

Nathanael
=PROJECT=vitam-support
=TRACKER=bugs
 Mettre à jour vos préférences &lt; https://support.programmevitam.fr/account/preferences.php&gt;</TextContent>
</Content>